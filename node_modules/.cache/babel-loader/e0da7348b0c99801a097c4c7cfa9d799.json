{"ast":null,"code":"var _jsxFileName = \"/Users/emreduman/Desktop/patika-hw-week-6/src/components/cookieGetter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useCookie } from '../hooks/useCookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CookieGetter() {\n  _s();\n\n  const {\n    getCookie,\n    getAllCookies\n  } = useCookie();\n  const [cookieName, setCookieName] = useState(\"\");\n  const [cookieValue, setCookieValue] = useState(\"\");\n  const [cookieNameInput, setCookieNameInput] = useState(\"\");\n  const [cookieValueColor, setCookieValueColor] = useState(\"black\");\n  const [allCookies, setAllCookies] = useState([]);\n  useEffect(() => {\n    let cookies = getAllCookies();\n    setAllCookies(cookies);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Get\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Cookie Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setCookieNameInput(e.target.value),\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Cookie Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => getCookieByName(),\n        children: \"Get Cookie By Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: [cookieName, cookieName === \"\" ? \"\" : \" :\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: cookieValueColor\n          },\n          children: cookieValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 105\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => showAllCookies(),\n          children: \"Update All Cookies Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Cookie Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Cookie Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: allCookies.map((e, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: e[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 29\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n\n  function getCookieByName() {\n    if (cookieNameInput === \"\") {\n      alert(\"Please enter a cookie name\");\n      return;\n    }\n\n    let value = getCookie(cookieNameInput);\n    setCookieName(cookieNameInput);\n\n    if (value !== \"\") {\n      setCookieValue(value);\n      setCookieValueColor(\"black\");\n    } else {\n      setCookieValue(\"NOT SET\");\n      setCookieValueColor(\"red\");\n    }\n  }\n\n  function showAllCookies() {\n    let cookies = getAllCookies();\n    setAllCookies(cookies);\n  }\n}\n\n_s(CookieGetter, \"Gbrp1baaaybcxuSbuxNn4qmONSM=\", false, function () {\n  return [useCookie];\n});\n\n_c = CookieGetter;\nexport default CookieGetter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CookieGetter\");","map":{"version":3,"sources":["/Users/emreduman/Desktop/patika-hw-week-6/src/components/cookieGetter.jsx"],"names":["React","useEffect","useState","useCookie","CookieGetter","getCookie","getAllCookies","cookieName","setCookieName","cookieValue","setCookieValue","cookieNameInput","setCookieNameInput","cookieValueColor","setCookieValueColor","allCookies","setAllCookies","cookies","e","target","value","getCookieByName","fontWeight","color","showAllCookies","map","i","alert"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useCookie } from '../hooks/useCookie';\r\n\r\nfunction CookieGetter() {\r\n    const { getCookie, getAllCookies } = useCookie();\r\n    const [cookieName, setCookieName] = useState(\"\");\r\n    const [cookieValue, setCookieValue] = useState(\"\");\r\n    const [cookieNameInput, setCookieNameInput] = useState(\"\");\r\n    const [cookieValueColor, setCookieValueColor] = useState(\"black\");\r\n    const [allCookies, setAllCookies] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        let cookies = getAllCookies();\r\n        setAllCookies(cookies);\r\n    }, []);\r\n    return (\r\n        <div className='card mb-5'>\r\n            <div className='card-header'><h2>Get</h2></div>\r\n            <div className='card-body'>\r\n            <div className=\"mb-3\">\r\n                <label className=\"form-label\">Cookie Name</label>\r\n                <input onChange={(e) => setCookieNameInput(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"Cookie Name\" />\r\n            </div>\r\n            <button className='btn btn-primary' onClick={() => getCookieByName()}>Get Cookie By Name</button>\r\n            <div>\r\n                <span style={{ fontWeight: \"bold\" }}>{cookieName}{cookieName === \"\" ? \"\" : \" :\"}</span> <span style={{ color: cookieValueColor }}>{cookieValue}</span>\r\n            </div>\r\n            <hr />\r\n            <div className='mt-3'>\r\n                <button className='btn btn-secondary' onClick={() => showAllCookies()}>Update All Cookies Table</button>\r\n                <table className='table'>\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Cookie Name</td>\r\n                            <td>Cookie Value</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {allCookies.map((e,i) => \r\n                            <tr key={i}>\r\n                            <td>{e[0]}</td>\r\n                            <td>{e[1]}</td>\r\n                        </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n\r\n    function getCookieByName() {\r\n        if(cookieNameInput===\"\"){\r\n            alert(\"Please enter a cookie name\")\r\n            return;\r\n        }\r\n        let value = getCookie(cookieNameInput);\r\n        setCookieName(cookieNameInput);\r\n        if (value !== \"\") {\r\n            setCookieValue(value);\r\n            setCookieValueColor(\"black\")\r\n        }\r\n        else {\r\n            setCookieValue(\"NOT SET\");\r\n            setCookieValueColor(\"red\")\r\n        }\r\n    }\r\n    function showAllCookies() {\r\n        let cookies = getAllCookies();\r\n        setAllCookies(cookies);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default CookieGetter;"]},"metadata":{},"sourceType":"module"}